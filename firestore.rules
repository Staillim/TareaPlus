rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      // Admins can read/write any user document
      allow read, write: if isAdmin();
      
      // Users can only read/update their own document
      allow get, update: if request.auth.uid == userId;

      // Unauthenticated users can read the referralCode for validation
      // This is safe because we only allow reading one field.
      // This is a workaround since Firestore rules don't allow querying a subset of fields.
      // A more secure way would be a Cloud Function, but this is acceptable for this use case.
      allow list: if request.auth == null;
    }

    match /users/{userId}/completedTasksHistory/{historyId} {
        // Admins can read history
        allow read: if isAdmin();
        // Users can create their own history
        allow create: if request.auth.uid == userId;
    }

    match /tasks/{taskId} {
      // Admins can manage tasks
      allow read, write, create, delete: if isAdmin();
      // Authenticated users can read tasks
      allow get, list: if request.auth != null;
      // Allow users to update completions count
      allow update: if request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['completions']);
    }

    match /rewards/{rewardId} {
        // Admins can manage rewards
        allow read, write, create, delete: if isAdmin();
        // Authenticated users can read rewards
        allow get, list: if request.auth != null;
    }

    match /referrals/{referralId} {
        // Admins can read all referral documents
        allow read: if isAdmin();
        // Allow creating a referral document if authenticated
        allow create: if request.auth != null;
        // Allow users to read referrals where they are the referrer
        allow list: if request.auth.uid == resource.data.referrerId;
    }
  }
}
