rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role via custom claims
    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can perform any action on any user document
      allow read, write: if isAdmin();
      
      // A user can create their own document.
      allow create: if request.auth.uid == userId;

      // A user can get or update their own document, but not delete.
      allow get, update: if request.auth.uid == userId;

      // Rules for the 'completedTasksHistory' subcollection
      match /completedTasksHistory/{historyId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }

    // Rules for the 'tasks' collection
    match /tasks/{taskId} {
      // Admins can read and write tasks
      allow read, write: if isAdmin();
      // Authenticated users can read tasks
      allow get, list: if request.auth != null;
    }

    // Rules for the 'rewards' collection
    match /rewards/{rewardId} {
       // Admins can read and write rewards
      allow read, write: if isAdmin();
      // Authenticated users can read rewards
      allow get, list: if request.auth != null;
    }

    // Rules for the 'referrals' collection
    match /referrals/{referralId} {
      // A user can read a referral document if they are the referrer
      // This rule allows the query `where("referrerId", "==", request.auth.uid)` to work.
      allow read: if request.auth != null && resource.data.referrerId == request.auth.uid;
      // Allow authenticated users to create referrals
      allow create: if request.auth != null;
    }
  }
}
