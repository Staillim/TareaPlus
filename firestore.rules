rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read/write any user document
      allow read, write: if isAdmin();
      
      // Users can create their own document
      allow create: if request.auth.uid == userId;

      // Users can only read or update their own document
      allow get, update: if request.auth.uid == userId;

      // Rules for the 'completedTasksHistory' subcollection
      match /completedTasksHistory/{historyId} {
        allow read, write: if request.auth.uid == userId || isAdmin();
      }
    }

    // Rules for the 'tasks' collection
    match /tasks/{taskId} {
      // Admins can read and write tasks
      allow read, write: if isAdmin();
      // Authenticated users can read tasks
      allow get, list: if request.auth != null;
    }

    // Rules for the 'rewards' collection
    match /rewards/{rewardId} {
       // Admins can read and write rewards
      allow read, write: if isAdmin();
      // Authenticated users can read rewards
      allow get, list: if request.auth != null;
    }

    // Rules for the 'referrals' collection
    match /referrals/{referralId} {
      // A user can read a referral document if they are the referrer
      allow read: if request.auth != null && resource.data.referrerId == request.auth.uid;
      // Allow users to create referrals
      allow create: if request.auth != null;
    }
  }
}
