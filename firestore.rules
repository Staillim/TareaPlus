
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Reglas para la colección 'users'
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;

      // Permisos para el rol de 'admin'
      function isAdmin() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      }
      allow list, get: if isAdmin();
    }

    // Reglas para la colección 'tasks'
    match /tasks/{taskId} {
      allow read: if request.auth != null;
      function isAdmin() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      }
      allow write: if isAdmin();
    }
    
    // Reglas para la colección 'rewards'
    match /rewards/{rewardId} {
        allow read: if request.auth != null;
        function isAdmin() {
          return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        }
        allow write: if isAdmin();
    }
    
    // Reglas para la colección 'referrals'
    match /referrals/{referralId} {
      // Un usuario puede leer los documentos donde él es el referente.
      // Esto es necesario para que la consulta del contador de referidos funcione.
      allow read: if request.auth != null && resource.data.referrerId == request.auth.uid;
      
      // Cualquiera puede crear un referido (al registrarse).
      allow create: if request.auth != null;
    }
  }
}
