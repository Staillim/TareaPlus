rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Reglas para la colección 'users'
    match /users/{userId} {
      // Un usuario puede leer su propio perfil si está autenticado
      allow get: if request.auth != null && request.auth.uid == userId;

      // Un usuario puede crear su propio perfil durante el registro
      allow create: if request.auth != null && request.auth.uid == userId;

      // Un usuario puede actualizar su propio perfil
      allow update: if request.auth != null && request.auth.uid == userId;

      // Los usuarios no pueden listar ni eliminar perfiles de otros
      allow list, delete: if false;

      // Un usuario no autenticado puede leer los códigos de referido
      allow list: if request.auth == null;
    }
    
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Reglas para la colección 'tasks'
    match /tasks/{taskId} {
      // Cualquier usuario autenticado puede leer las tareas
      allow read: if request.auth != null;
      // Solo los administradores pueden crear, actualizar o eliminar tareas
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reglas para la colección 'rewards'
    match /rewards/{rewardId} {
       // Cualquier usuario autenticado puede leer las recompensas
      allow read: if request.auth != null;
      // Solo los administradores pueden escribir en las recompensas
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Reglas para la colección 'referrals'
    match /referrals/{referralId} {
      // Un usuario puede crear un registro de referido
      allow create: if request.auth != null;
      
      // Un usuario puede leer la lista de referidos para contar los suyos
      allow list: if request.auth != null;

      // Un usuario solo puede leer un documento de referido si él es el referente
      allow get: if request.auth != null && resource.data.referrerId == request.auth.uid;

      // Nadie puede actualizar o eliminar registros de referidos directamente
      allow update, delete: if false;
    }
  }
}
