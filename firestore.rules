rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Reglas para la colección 'users'
    match /users/{userId} {
      // Un usuario solo puede leer y escribir en su propio documento.
      // Un usuario solo puede crear un documento para sí mismo.
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;

      // El administrador puede leer cualquier documento de usuario.
      allow get: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      // Historial de tareas completadas de un usuario
      match /completedTasksHistory/{historyId} {
        allow create: if request.auth != null && request.auth.uid == userId;
        allow read: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Reglas para la colección 'tasks'
    match /tasks/{taskId} {
      // Los administradores pueden hacer todo.
      allow read, write, create, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      // Los usuarios autenticados pueden leer tareas.
      allow get: if request.auth != null;
      allow list: if request.auth != null;
    }

    // Reglas para la colección 'rewards'
    match /rewards/{rewardId} {
        // Los administradores pueden gestionar las recompensas.
        allow write, create, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        // Cualquier usuario autenticado puede leer las recompensas.
        allow read: if request.auth != null;
    }

    // Reglas para la colección 'referrals'
    match /referrals/{referralId} {
      // Un usuario puede leer los registros de referidos donde él es el referente.
      allow read: if request.auth != null && resource.data.referrerId == request.auth.uid;
      // Cualquier usuario autenticado puede crear un nuevo registro de referido.
      allow create: if request.auth != null;
      // Permite que la consulta para contar referidos funcione.
      allow list: if request.auth != null;
    }
  }
}
