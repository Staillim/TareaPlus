rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId);
      // Allow unauthenticated reads only for the referralCode field for validation
      allow get: if request.auth == null && resource.data.keys().hasAll(['referralCode']);
    }

    match /tasks/{taskId} {
        allow read: if request.auth != null;
        allow create, update, delete: if isAdmin();
    }

    match /rewards/{rewardId} {
        allow read: if request.auth != null;
        allow create, update, delete: if isAdmin();
    }
    
    match /users/{userId}/completedTasksHistory/{historyId} {
        allow create: if isOwner(userId);
    }
    
    match /referrals/{referralId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null; // A user is creating a referral link to themselves
    }

    // Rule to allow querying the users collection by referralCode
    match /users/{userId} {
      allow list: if request.auth == null && request.query.keys().hasOnly(['where']) && request.query.where[0] == ['referralCode', '==', request.query.where[2]];
    }
  }
}
