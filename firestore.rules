rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection
    match /users/{userId} {
      // Any authenticated user can read any user's public profile data
      allow read: if request.auth != null;
      
      // A user can create their own document upon signup
      allow create: if request.auth != null 
                    && request.auth.uid == userId
                    && request.resource.data.uid == request.auth.uid
                    && request.resource.data.email == request.auth.token.email
                    && request.resource.data.username is string
                    && request.resource.data.username.size() >= 3
                    && request.resource.data.createdAt == request.time
                    && request.resource.data.role == 'user'
                    && request.resource.data.points == 0
                    && request.resource.data.referrals == 0
                    && request.resource.data.referralCode is string
                    && ('referredByCode' in request.resource.data || !('referredByCode' in request.resource.data));


      // A user can only update their own username
      allow update: if request.auth != null && request.auth.uid == userId
                    && request.resource.data.username != resource.data.username;
                    
      // Nobody can delete user documents for now
      allow delete: if false;

      // Subcollection for completed tasks history
      match /completedTasksHistory/{historyId} {
        allow read, create: if request.auth != null && request.auth.uid == userId;
        allow update, delete: if false;
      }
      
      // Subcollection for redemptions
      match /redemptions/{redemptionId} {
        allow read, create: if request.auth != null && request.auth.uid == userId;
        allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        allow delete: if false;
      }
    }
    
    // Collection group for redemptions to allow admins to query across all users
    match /{path=**}/redemptions/{redemptionId} {
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Tasks collection - Only admins can manage tasks
    match /tasks/{taskId} {
      allow read: if request.auth != null; // All authenticated users can read tasks
      allow create, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      // Allow admins to update, and users to increment completions via a batch write
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
                     (request.auth != null && request.resource.data.completions == resource.data.completions + 1);
    }

    // Rewards collection - Only admins can manage rewards
    match /rewards/{rewardId} {
        allow read: if request.auth != null; // All authenticated users can read rewards
        allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Referrals collection
    match /referrals/{referralId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if false;
    }
  }
}
